{"version":3,"sources":["./src/app/models/bookTrackerError.ts","./src/app/core/book-tracker-error-handler.service.ts","./src/app/add-book/add-book.component.html","./src/app/add-book/add-book.component.ts","./src/app/app.component.css","./src/app/data.ts","./src/environments/environment.ts","./src/app/edit-book/edit-book.component.ts","./src/app/core/badge.service.ts","./src/app/dashboard/dashboard.component.html","./src/app/add-reader/add-reader.component.html","./src/app/core/data.service.ts","./src/app/dashboard/dashboard.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/add-reader/add-reader.component.ts","./src/app/app.module.ts","./src/app/edit-reader/edit-reader.component.html","./src/app/edit-book/edit-book.component.html","./src/app/edit-reader/edit-reader.component.ts","./src/app/core/logger.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export class BookTrackerError {\r\n  errorNumber: number;\r\n  message: string;\r\n  friendlyMessage: string;\r\n}\r\n","import { ErrorHandler, Injectable } from '@angular/core';\nimport { BookTrackerError } from 'app/models/bookTrackerError';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookTrackerErrorHandlerService implements ErrorHandler {\n\n  constructor() { }\n  handleError(error: any): void {\n    let customError: BookTrackerError = new BookTrackerError();\n    customError.errorNumber = 200;\n    customError.message = (<Error>error).message;\n    customError.friendlyMessage = 'An error occurred. Please try again';\n\n    console.log(customError);\n  }\n}\n","export default \"<div class=\\\"col-lg-5\\\">\\r\\n  <div class=\\\"well bs-component\\\">\\r\\n    <form #addBookForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveBook(addBookForm.value)\\\" class=\\\"form-horizontal\\\">\\r\\n      <fieldset>\\r\\n        <legend>Add New Book</legend>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputTitle\\\" class=\\\"col-lg-3 control-label\\\">Title</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTitle\\\" placeholder=\\\"Title\\\" name=\\\"title\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputAuthor\\\" class=\\\"col-lg-3 control-label\\\">Author</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputAuthor\\\" placeholder=\\\"Author\\\" name=\\\"author\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputYear\\\" class=\\\"col-lg-3 control-label\\\">Year</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputYear\\\" placeholder=\\\"Year Published\\\" name=\\\"publicationYear\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-lg-8 col-lg-offset-3\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\";","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Book } from \"app/models/book\";\r\n\r\n@Component({\r\n  selector: 'app-add-book',\r\n  templateUrl: './add-book.component.html',\r\n  styles: []\r\n})\r\nexport class AddBookComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n\r\n  saveBook(formValues: any): void {\r\n    let newBook: Book = <Book>formValues;\r\n    newBook.bookID = 0;\r\n    console.log(newBook);\r\n    console.warn('Save new book not yet implemented.');\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\";","import { Book } from \"app/models/book\";\r\nimport { Reader } from \"app/models/reader\";\r\n\r\nexport const allReaders: Reader[] = [\r\n    { readerID: 1, name: 'Marie', weeklyReadingGoal: 400, totalMinutesRead: 5600 },\r\n    { readerID: 2, name: 'Daniel', weeklyReadingGoal: 210, totalMinutesRead: 3000 },\r\n    { readerID: 3, name: 'Lanier', weeklyReadingGoal: 140, totalMinutesRead: 600 }\r\n  ];\r\n\r\nexport const allBooks: Book[] = [\r\n    { bookID: 1, title: 'Goodnight Moon', author: 'Margaret Wise Brown', publicationYear: 1953 },\r\n    { bookID: 2, title: 'Green Eggs and Ham', author: 'Dr. Seuss', publicationYear: 1960 },\r\n    { bookID: 3, title: 'Where the Wild Things Are', author: 'Maurice Sendak', publicationYear: 1963 },\r\n    { bookID: 4, title: 'The Hobbit', author: 'J. R. R. Tolkien', publicationYear: 1937 },\r\n    { bookID: 5, title: 'Curious George', author: 'H. A. Rey', publicationYear: 1941 },\r\n    { bookID: 6, title: 'Alice\\'s Adventures in Wonderland', author: 'Lewis Carroll', publicationYear: 1865 },\r\n];","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Data } from '@angular/router';\r\n\r\nimport { Book } from 'app/models/book';\r\nimport { allBooks } from 'app/data';\r\nimport { DataService } from 'app/core/data.service';\r\nimport { LoggerService } from 'app/core/logger.service';\r\nimport { BadgeService } from 'app/core/badge.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-book',\r\n  templateUrl: './edit-book.component.html',\r\n  styles: [],\r\n})\r\nexport class EditBookComponent implements OnInit {\r\n\r\n  selectedBook: Book;\r\n\r\n  constructor(private route: ActivatedRoute, private dataService: DataService, private loggerService: LoggerService) { }\r\n\r\n  ngOnInit() {\r\n    let bookID: number = parseInt(this.route.snapshot.params['id']);\r\n    this.selectedBook = this.dataService.getBookById(bookID);\r\n  }\r\n\r\n  setMostPopular(): void {\r\n    this.dataService.setMostPopularBook(this.selectedBook);\r\n    this.loggerService.log(`New most popular book: ${this.selectedBook.title}`);\r\n  }\r\n\r\n  saveChanges(): void {\r\n    console.warn('Save changes to book not yet implemented.');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BadgeService {\n\n  constructor() { }\n\n  getReaderBadge(minutesRead: number): string {\n    if (minutesRead > 5000) {\n      return 'Book Worm';\n    } else if (minutesRead > 2500) {\n      return 'Page Turner';\n    } else {\n      return 'Getting Started';\n    }\n  }\n}\n","export default \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n          <h3 class=\\\"panel-title\\\">All Books</h3>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n        <li *ngFor='let book of allBooks'>\\r\\n          <i>{{book.title}}</i>\\r\\n          <a [routerLink]=\\\"['/editbook', book.bookID]\\\"> Edit </a>\\r\\n          <a (click)=\\\"deleteBook(book.bookID)\\\">Delete</a>\\r\\n        </li>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n          <h3 class=\\\"panel-title\\\">All Readers</h3>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n        <li *ngFor='let reader of allReaders'>\\r\\n          {{reader.name}}\\r\\n          <a [routerLink]=\\\"['/editreader', reader.readerID]\\\">Edit</a>\\r\\n          <a (click)=\\\"deleteReader(reader.readerID)\\\"> Delete </a>\\r\\n        </li>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n          <h3 class=\\\"panel-title\\\">Most Popular Book</h3>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n          <i>{{mostPopularBook.title}}</i> by {{mostPopularBook.author}}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";","export default \"<div class=\\\"col-lg-5\\\">\\r\\n  <div class=\\\"well bs-component\\\">\\r\\n    <form #addReaderForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveReader(addReaderForm.value)\\\" class=\\\"form-horizontal\\\">\\r\\n      <fieldset>\\r\\n        <legend>Add Reader</legend>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Name</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Name\\\" name=\\\"name\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Weekly Goal</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Weekly Goal\\\" name=\\\"weeklyReadingGoal\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputTotal\\\" class=\\\"col-lg-3 control-label\\\">Total Read</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTotal\\\" placeholder=\\\"Total Minutes Read\\\" name=\\\"totalMinutesRead\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-lg-10 col-lg-offset-3\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\";","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { allBooks, allReaders } from 'app/data';\nimport { Book } from 'app/models/book';\nimport { Reader } from 'app/models/reader';\nimport { LoggerService } from './logger.service';\nimport { BookTrackerError } from 'app/models/bookTrackerError';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  mostPopularBook: Book = allBooks[0];\n\n  constructor(private loggerService: LoggerService, private http: HttpClient) { }\n\n  setMostPopularBook(popularBook: Book): void {\n    this.mostPopularBook = popularBook;\n  }\n\n  getAuthorRecommendation(readerID: number): Promise<string> {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (readerID > 0) {\n          resolve('Dr. Seuss');\n        } else {\n          reject('Invalid reader ID');\n        }\n      }, 2000);\n    });\n  }\n\n  getAllReaders(): Observable<Reader[] | BookTrackerError> {\n    return this.http.get<Reader[]>('/api/readers').pipe(catchError(this.handleError))\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    let dataError = new BookTrackerError();\n    dataError.errorNumber = 100;\n    dataError.message = error.statusText;\n    dataError.friendlyMessage = 'An error occurred retrieving data';\n    return throwError(dataError)\n  }\n\n  getReaderById(id: number): Reader {\n    return allReaders.find(reader => reader.readerID === id);\n  }\n\n  getAllBooks(): Book[] {\n    return allBooks;\n  }\n\n  getBookById(id: number): Book {\n    return allBooks.find(book => book.bookID === id);\n  }\n}\n","import { Component, OnInit, Version, VERSION } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Observable } from 'rxjs';\r\nimport { DataService } from 'app/core/data.service';\r\n\r\nimport { Book } from \"app/models/book\";\r\nimport { Reader } from \"app/models/reader\";\r\nimport { LoggerService } from '../core/logger.service';\r\nimport { BookTrackerError } from 'app/models/bookTrackerError';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styles: []\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  allBooks: Book[];\r\n  allReaders: Reader[];\r\n  mostPopularBook: Book;\r\n\r\n  constructor(private loggerService: LoggerService, private dataService: DataService, private title: Title) {\r\n    this.loggerService.log('Creating the dashboard!');\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.allBooks = this.dataService.getAllBooks();\r\n    this.dataService.getAllReaders().subscribe(\r\n      (data: Reader[] | BookTrackerError) => this.allReaders = <Reader[]>data,\r\n      (err: BookTrackerError) => console.log(err),\r\n      () => this.loggerService.log('All done getting readers!')\r\n    );\r\n\r\n    this.mostPopularBook = this.dataService.mostPopularBook;\r\n\r\n    this.dataService.getAuthorRecommendation(1).then(\r\n      (author: string) => this.loggerService.log(author),\r\n      (err: string) => this.loggerService.error(`The promise was rejected: ${err}`)\r\n    ).catch((error: Error) => this.loggerService.error(error.message));\r\n\r\n    this.getAuthorRecommendationAsync(1);\r\n\r\n    this.title.setTitle(`Book Tracker ${VERSION.full}`);\r\n  }\r\n\r\n  private async getAuthorRecommendationAsync(readerID: number): Promise<void> {\r\n    try {\r\n      let author: string = await this.dataService.getAuthorRecommendation(readerID);\r\n      this.loggerService.log(author);\r\n    } catch(error) {\r\n      this.loggerService.error(error);\r\n    }\r\n  }\r\n\r\n  deleteBook(bookID: number): void {\r\n    console.warn(`Delete book not yet implemented (bookID: ${bookID}).`);\r\n  }\r\n\r\n  deleteReader(readerID: number): void {\r\n    console.warn(`Delete reader not yet implemented (readerID: ${readerID}).`);\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","export default \"<nav class=\\\"navbar navbar-default\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <!-- Brand and toggle get grouped for better mobile display -->\\r\\n        <div class=\\\"navbar-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\">\\r\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n            </button>\\r\\n            <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/dashboard']\\\">Book Tracker</a>\\r\\n        </div>\\r\\n\\r\\n        <!-- Collect the nav links, forms, and other content for toggling -->\\r\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\r\\n            <ul class=\\\"nav navbar-nav\\\">\\r\\n                <li><a [routerLink]=\\\"['/addbook']\\\">Add Book<span class=\\\"sr-only\\\">(current)</span></a></li>\\r\\n                <li><a [routerLink]=\\\"['/addreader']\\\">Add Reader</a></li>\\r\\n            </ul>\\r\\n        </div><!-- /.navbar-collapse -->\\r\\n    </div><!-- /.container-fluid -->\\r\\n</nav>\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Reader } from \"app/models/reader\";\r\n\r\n@Component({\r\n  selector: 'app-add-reader',\r\n  templateUrl: './add-reader.component.html',\r\n  styles: []\r\n})\r\nexport class AddReaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n\r\n  saveReader(formValues: any): void {\r\n    let newReader: Reader = <Reader>formValues;\r\n    newReader.readerID = 0;\r\n    console.log(newReader);\r\n    console.warn('Save new reader not yet implemented.');\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { ErrorHandler, NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AddBookComponent } from './add-book/add-book.component';\r\nimport { AddReaderComponent } from './add-reader/add-reader.component';\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { EditBookComponent } from './edit-book/edit-book.component';\r\nimport { EditReaderComponent } from './edit-reader/edit-reader.component';\r\nimport { LoggerService } from './core/logger.service';\r\nimport { PlainLoggerService } from './core/plain-logger.service';\r\nimport { DataService } from './core/data.service';\r\nimport { dataServiceFactory } from './core/data.service.factory';\r\nimport { BookTrackerErrorHandlerService } from './core/book-tracker-error-handler.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DashboardComponent,\r\n    AddBookComponent,\r\n    EditReaderComponent,\r\n    EditBookComponent,\r\n    AddReaderComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule\r\n  ],\r\n  // providers: [{\r\n  //   provide: LoggerService, useValue: {\r\n  //     log: (message: string) => console.log(`MESSAGE: ${message}`),\r\n  //     error: (message: string) => console.log(`PROBLEM: ${message}`)\r\n  //   } },\r\n  // {provide: DataService, useFactory: dataServiceFactory, deps: [LoggerService]}\r\n  //],\r\n  providers: [\r\n    DataService,\r\n    LoggerService,\r\n    {provide: ErrorHandler, useClass: BookTrackerErrorHandlerService}\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export default \"<div class=\\\"col-lg-5\\\">\\r\\n  <div class=\\\"well bs-component\\\">\\r\\n    <form class=\\\"form-horizontal\\\">\\r\\n      <fieldset>\\r\\n        <legend>Edit Reader</legend>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Name</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"selectedReader.name\\\" name=\\\"name\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Weekly Goal</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Weekly Goal\\\" [(ngModel)]=\\\"selectedReader.weeklyReadingGoal\\\" name=\\\"weeklyReaddingGoal\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputTotal\\\" class=\\\"col-lg-3 control-label\\\">Total Read</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTotal\\\" placeholder=\\\"Total Minutes Read\\\" [(ngModel)]=\\\"selectedReader.totalMinutesRead\\\" name=\\\"totalMinutesRead\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"col-lg-3 control-label\\\">Current Badge</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            {{currentBadge}}\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-lg-10 col-lg-offset-3\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveChanges()\\\">Save</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"col-lg-5\\\">\\r\\n  <div class=\\\"well bs-component\\\">\\r\\n    <form class=\\\"form-horizontal\\\">\\r\\n      <fieldset>\\r\\n        <legend>Edit Book</legend>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputTitle\\\" class=\\\"col-lg-3 control-label\\\">Title</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTitle\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"selectedBook.title\\\" name=\\\"title\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputAuthor\\\" class=\\\"col-lg-3 control-label\\\">Author</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputAuthor\\\" placeholder=\\\"Author\\\" [(ngModel)]=\\\"selectedBook.author\\\" name=\\\"author\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputYear\\\" class=\\\"col-lg-3 control-label\\\">Year</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputYear\\\" placeholder=\\\"Year Published\\\" [(ngModel)]=\\\"selectedBook.publicationYear\\\" name=\\\"publicationYear\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-lg-8 col-lg-offset-3\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveChanges()\\\">Save</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"setMostPopular()\\\">Set As Most Popular</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BadgeService } from 'app/core/badge.service';\r\n\r\nimport { allReaders } from 'app/data';\r\nimport { Reader } from \"app/models/reader\";\r\n\r\n@Component({\r\n  selector: 'app-edit-reader',\r\n  templateUrl: './edit-reader.component.html',\r\n  styles: [],\r\n  providers: [BadgeService]\r\n})\r\nexport class EditReaderComponent implements OnInit {\r\n\r\n  selectedReader: Reader;\r\n  currentBadge: string;\r\n\r\n  constructor(private route: ActivatedRoute, private badgeService: BadgeService) { }\r\n\r\n  ngOnInit() {\r\n    let readerID: number = parseInt(this.route.snapshot.params['id']);\r\n    this.selectedReader = allReaders.find(reader => reader.readerID === readerID);\r\n    this.currentBadge = this.badgeService.getReaderBadge(this.selectedReader.totalMinutesRead);\r\n  }\r\n\r\n  saveChanges() {\r\n    console.warn('Save reader not yet implemented.');\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class LoggerService {\r\n  log(message: string): void {\r\n    const timeString: String = new Date().toLocaleDateString();\r\n    console.log(`${message} (${timeString})`);\r\n  }\r\n\r\n  error(message: string): void {\r\n    console.error(`ERROR: ${message}`);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AddBookComponent } from \"app/add-book/add-book.component\";\r\nimport { AddReaderComponent } from \"app/add-reader/add-reader.component\";\r\nimport { DashboardComponent } from \"app/dashboard/dashboard.component\";\r\nimport { EditBookComponent } from \"app/edit-book/edit-book.component\";\r\nimport { EditReaderComponent } from \"app/edit-reader/edit-reader.component\";\r\n\r\nconst routes: Routes = [\r\n  { path: 'dashboard', component: DashboardComponent },\r\n  { path: 'addbook', component: AddBookComponent },\r\n  { path: 'addreader', component: AddReaderComponent },\r\n  { path: 'editreader/:id', component: EditReaderComponent },\r\n  { path: 'editbook/:id', component: EditBookComponent },\r\n  { path: '', redirectTo: 'dashboard', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}